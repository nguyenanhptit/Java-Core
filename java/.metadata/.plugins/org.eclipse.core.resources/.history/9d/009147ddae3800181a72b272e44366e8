package edu.java.spring.jdbc;

import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import org.apache.log4j.Logger;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.StatementCallback;

public class StudentJdbcDAO {
	private final static Logger LOGGER = Logger.getLogger(StudentJdbcDAO.class);
	private DataSource dataSource;
	private JdbcTemplate jdbcTemplate;
	private String insertQuery;

	private final static class StudentRowMapper implements RowMapper<Student>{
		@Override
		public Student mapRow(ResultSet rs, int i) throws SQLException {
			try {
			// TODO Auto-generated method stub
			Student student= new Student();
			student.setId(rs.getInt("id"));
			student.setName(rs.getString("name"));
			student.setAge(rs.getInt("age"));
			return student;
		}	
			catch (Exception e) {
				// TODO: handle exception
				LOGGER.error(e, e);
				return null;
			}
		}
	}
	
	private String updateAgeByNameSQL="update age where name = ? ";
	
	public void updateAgeByName(String name, int age) {
		jdbcTemplate.execute("update STUDENT set age=" + age + "where name" + name);
	}
	
	
	
	public JdbcTemplate getJdbcTemplate() {
		return jdbcTemplate;
	}

	public static Logger getLogger() {
		return LOGGER;
	}

	public String getInsertQuery() {
		return insertQuery;
	}

	public void setInsertQuery(String insertQuery) {
		this.insertQuery = insertQuery;
	}

	public void insert(String name, int age) {
		jdbcTemplate.update(insertQuery, name, age);
		System.out.println("created record name = " + name + " Age " + age);
	}

	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}

	public DataSource getDataSource() {
		return dataSource;
	}

	public void setDataSource(DataSource dataSource) {
		this.dataSource = dataSource;
		this.jdbcTemplate = new JdbcTemplate(dataSource);

	}

	public int totalRecord() {
		return jdbcTemplate.execute(new StatementCallback<Integer>() {

			@Override
			public Integer doInStatement(Statement statement) throws SQLException, DataAccessException {
				// TODO Auto-generated method stub
				ResultSet rs = statement.executeQuery("select count(*) from student");

				return rs.next() ? rs.getInt(1) : 0;
			}

		});
		// return jdbcTemplate.execute((Statement statement)->{
		// ResultSet rs = statement.executeQuery("select count(*) from student");
		// return rs.next();
		// });
	}
	
	public List<Student> loadStudent(String name){
		return jdbcTemplate.query("SELECT * FROM STUDENT WHERE NAME LIKE '%" + name+"%'", new StudentRowMapper());
	}
	
	public List<Student> loadStudent1( ){
		return jdbcTemplate.query("select * from STUDENT" , new StudentRowMapper());
	}
	
	public int[] add( List<Student> students) {
		List<Object[]> batch= new ArrayList<Object[]>();
		students.forEach(student->batch.add(new Object[] {student.getName(), student.getAge()}));
		return jdbcTemplate.batchUpdate(insertQuery,batch);
	}

	public String getUpdateAgeByNameSQL() {
		return updateAgeByNameSQL;
	}



	public void setUpdateAgeByNameSQL(String updateAgeByNameSQL) {
		this.updateAgeByNameSQL = updateAgeByNameSQL;
	}



	public void createTableIfNotExist() {

		try {
			DatabaseMetaData dbmd = dataSource.getConnection().getMetaData();
			ResultSet rs = dbmd.getTables(null, null, "STUDENT", null);
			if (rs.next()) {
				System.out.println("Table" + rs.getString("TABLE-NAME") + "already exists");
				return;
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		jdbcTemplate.execute("CREATE TABLE STUDENT("
				+ " id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY( START WITH 1, INCREMENT BY 1),"
				+ " name VARCHAR(1000)," + " age INTEGER)");
	}

}
